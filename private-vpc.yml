AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template creates a VPC named "vpc-prod" with two private subnets.
  It includes a VPC Endpoint for S3 and security groups for RDS (PostgreSQL) access that allows traffic on the PostgreSQL port (5432).
  All resources will be deleted when the stack is deleted.

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: 
        - Key: Name
          Value: vpc-prod

  # Private Subnet 1 (CIDR: 10.0.0.128/26)
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.128/26
      AvailabilityZone: !Select [0, !GetAZs ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: app-private-1
    DeletionPolicy: Delete

  # Private Subnet 2 (CIDR: 10.0.0.192/26)
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.192/26
      AvailabilityZone: !Select [1, !GetAZs ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: app-private-2
    DeletionPolicy: Delete

  # Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: vpc-prod-private-rt
    DeletionPolicy: Delete

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  # VPC Endpoint for S3
  VPCEndpointS3:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: com.amazonaws.us-east-1.s3   # Replace 'us-east-1' with your actual region
      RouteTableIds:
        - !Ref PrivateRouteTable
      VpcEndpointType: Gateway
    DeletionPolicy: Delete

  # Security Group for PostgreSQL access (postgres-sg)
  PostgresSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for accessing PostgreSQL
      VpcId: !Ref VPC
      SecurityGroupIngress:
        # Allow inbound traffic for PostgreSQL (port 5432)
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0  # You can limit this to a specific IP or range for tighter security
      SecurityGroupEgress:
        # Allow all outbound traffic
        - IpProtocol: -1  # All protocols
          FromPort: -1     # All ports
          ToPort: -1       # All ports
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: postgres-sg
    DeletionPolicy: Delete

Outputs:
  VPCId:
    Description: The ID of the VPC
    Value: !Ref VPC
  PrivateSubnet1Id:
    Description: The ID of the first private subnet (app-private-1)
    Value: !Ref PrivateSubnet1
  PrivateSubnet2Id:
    Description: The ID of the second private subnet (app-private-2)
    Value: !Ref PrivateSubnet2
  PostgresSecurityGroupId:
    Description: The ID of the security group for PostgreSQL
    Value: !Ref PostgresSecurityGroup
